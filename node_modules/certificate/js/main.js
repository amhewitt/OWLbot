$(document).ready(function(){
//var forge = require('node-forge');
 $("#cert-file").change(handleFileSelect);

function handleFileSelect(evt) {
    var files = evt.target.files; // FileList object
    getFile(files[0]);    
}
function getFile(p12cert)
{
    var reader = new FileReader();

    var password = 'password';

    reader.onload = (function (theFile) {
        return function(eve) {

            
console.log(eve.target.result);
           var p12Der = forge.util.decode64(eve.target.result);
//var p12Der = forge.util.decode64(eve.target.result.split(',')[1]);
            // get p12 as ASN.1 object
            // Not working for one of my p12 files
            var p12Asn1 = forge.asn1.fromDer(p12Der);
            console.log(p12Asn1);
            // decrypt p12 using the password 'password'
            // TODO: Not working for some reason for p12 and pfx file
            var p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'sonus123');
            console.log(p12);
            
        };
    })(p12cert);


reader.readAsText(p12cert);
}
    var pkcs12B64;
    function arrayBufferToString( buffer ) {
    var binary = '';
    var bytes = new Uint8Array( buffer );

    console.log(" bytes " + bytes);
    
    var len = bytes.byteLength;
    console.log(" len " + len);
    for (var i = 0; i < len; i++) {
        binary += String.fromCharCode( bytes[ i ] );
    }
    console.log(" binary " + binary);
    return binary;
}
			if (window.File && window.FileReader && window.FileList && window.Blob) {
				$('.drop-area').on('dragover', function(e){
					e.stopPropagation();
					e.preventDefault();
				});
				$('.drop-area').on('drop', function(e){
					e.stopPropagation();
					e.preventDefault();

					var files = e.originalEvent.dataTransfer.files;
					for(var i = 0; i <files.length; i++){
                        var reader = new FileReader();
reader.onload = function(e) {               
    var contents = e.target.result;

Keytool(contents, 'sonus123', {debug: false, storetype: 'JCEKS'})

 /*   var pkcs12Der = arrayBufferToString(contents)
     pkcs12B64 = forge.util.encode64(pkcs12Der);  
     console.log("encode ", pkcs12B64)	;   
    //do something else...
    var pkcs12Der= forge.util.decode64(pkcs12Der);
    console.log("decode ", pkcs12Der)
    var pkcs12Asn1 = forge.asn1.fromDer(pkcs12Der);
    console.log(" pkcs12Asn1 " + pkcs12Asn1);
var pkcs12 = forge.pkcs12.pkcs12FromAsn1(pkcs12Asn1, false, "sonus123");*/

}   
reader.readAsArrayBuffer(files[i]);


//p12 certificate stored in Base64 format
//var pkcs12Der= forge.util.decode64(pkcs12B64);

				//console.log("decode 33 ", pkcs12Der)	;
					}
				});
			} else {
			  alert('The File APIs are not fully supported in this browser.');
			}
		});